(()=>{"use strict";var e={607:function(e,n,t){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),(0,o(t(519)).default)()},519:function(e,n,t){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.getParentDir=n.FileInfo=n.loadingInfoId=n.filepathPId=n.fileContainerId=n.domain=void 0;const i=o(t(21)),r=o(t(393)),s=t(21);n.domain=window.location.toString(),n.fileContainerId="vfs-explorer-container",n.filepathPId="vfs-current-filepath-p",n.loadingInfoId="loading-info",n.FileInfo=class{},n.getParentDir=function(e){let n=e.split("/");return n.pop(),n.length>1?n.join("/"):"/"},n.default=function(){(0,i.default)(null,r.default,s.handleResponseError)}},393:function(e,n,t){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.showLoading=n.hideLoading=void 0;const i=t(519),r=o(t(21)),s=t(21);function a(){const e=document.getElementById(i.loadingInfoId);if(!e)return d(i.loadingInfoId);e.classList.add("display-none")}function d(e){console.error(`Ошибка получения элемента с ID = ${e}: элемент не найден`)}n.hideLoading=a,n.showLoading=function(){const e=document.getElementById(i.loadingInfoId);if(!e)return d(i.loadingInfoId);e.classList.remove("display-none")},n.default=function e(n,t){!function(n,t){const o=document.getElementById(i.fileContainerId);if(!o)return d(i.fileContainerId);let a=[...n];a.sort(((e,n)=>{const t=e.name,o=n.name;return t>o?1:t<o?-1:0})),"/"!=t&&(a=[{name:"../",path:(0,i.getParentDir)(t),havePermission:!0,isDir:!0,isParentDir:!0},...a]);const l=a.map((n=>function(n){const t=document.createElement("div");t.classList.add("file-elem"),n.isDir&&n.havePermission&&t.addEventListener("click",(()=>{(0,r.default)(n.path,e,s.handleResponseError)}));const o=document.createElement("img");o.src=`../icons/${n.isParentDir?"back":n.isDir?"dir":"file"}.png`,t.appendChild(o);const i=document.createElement("p");if(i.innerText=n.name,n.isParentDir&&i.classList.add("bold"),t.appendChild(i),!n.havePermission){const e=document.createElement("img");e.src="../icons/lock.png",t.appendChild(e)}return t}(n)));o.textContent="",l.forEach((e=>{o.appendChild(e)}))}(n,t),function(e){const n=document.getElementById(i.filepathPId);if(!n)return d(i.filepathPId);n.innerText=e}(t),a()}},21:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.handleResponseError=void 0;const o=t(519),i=t(393);n.handleResponseError=function(e){(0,i.hideLoading)(),alert(`Ошибка выполнения запроса\nТекст ошибки: "${e}"`)},n.default=function(e,n,t){const r=new URL(`${o.domain}vfs`);e&&r.searchParams.set("root",e);const s=new XMLHttpRequest;s.responseType="json",s.open("GET",r,!0),s.addEventListener("readystatechange",(()=>{if(4==s.readyState)if(200==s.status){const{path:e,files:t}=s.response;n(t,e)}else t(s.response.message)})),(0,i.showLoading)(),s.send()}}},n={};!function t(o){var i=n[o];if(void 0!==i)return i.exports;var r=n[o]={exports:{}};return e[o].call(r.exports,r,r.exports,t),r.exports}(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,